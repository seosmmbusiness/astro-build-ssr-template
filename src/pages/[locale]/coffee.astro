---
import { defaultLocale, locales } from '@/i18n/config';
import { initI18n } from '@/i18n/initI18n';
import { translations } from '@/i18n/translate';
import Layout from '@/layouts/Layout.astro';
import { fetchSSRJSON } from '@/lib/fetchSSR';
import { Image } from 'astro:assets';

const { locale, t, redirect } = await initI18n(Astro.params);
if (redirect) {
  return Astro.redirect(`/${defaultLocale}`);
}

let coffees: Array<{
  title: string;
  description: string;
  ingredients: string[];
  image: string;
}> = [];

let errorMsg: string | null = null;

try {
  // Получаем список горячих кофейных напитков с timeout 5 секунд
  coffees = await fetchSSRJSON('/coffee/hot');
} catch (err: any) {
  console.error('[coffee.astro] fetch error:', err);
  errorMsg = err.message;
}
---

<Layout locale={locale} t={t} class="pt-18">
  <section class="container mx-auto p-4">
    <h1 class="text-2xl font-bold mb-4">{t.coffee.title}</h1>
    {
      errorMsg ? (
        <p style="color: red;">Ошибка: {errorMsg}</p>
      ) : (
        <div class="grid grid-cols-1 gap-3 md:grid-cols-2 lg:grid-cols-4">
          {coffees.map((c, index) => (
            <div class="card">
              {c.image && (
                <Image
                  src={c.image}
                  alt={c.title}
                  width={322}
                  height={180}
                  loading={index > 1 ? 'lazy' : 'eager'}
                  decoding={index < 2 ? 'async' : 'auto'}
                />
              )}
              <div class="card-content">
                <h2>{c.title}</h2>
                <p>{c.description}</p>
                <p class="ingredients text-base-content">
                  <strong>{t.coffee.ingredients}:</strong>{' '}
                  {c.ingredients.join(', ')}
                </p>
              </div>
            </div>
          ))}
        </div>
      )
    }
  </section>
</Layout>

<style></style>
